{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wasadmin\\\\Downloads\\\\Project2\\\\swapi\\\\src\\\\components\\\\Planets.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { MongoClient } from 'mongodb';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Planets = () => {\n  _s();\n  const [planets, setPlanets] = useState([]);\n  const [selectedPlanet, setSelectedPlanet] = useState(null);\n  useEffect(() => {\n    const connectToDb = async () => {\n      const client = await MongoClient.connect('mongodb://localhost:27017', {\n        useNewUrlParser: true\n      });\n      const db = client.db('starwars');\n      setPlanets(await db.collection('planets').find().toArray());\n    };\n    connectToDb();\n  }, []);\n  const handleClick = planet => {\n    setSelectedPlanet(planet);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      fontFamily: 'Georgia, sans-serif',\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Star Wars Planets\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Select a Planet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: planets.map(planet => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => handleClick(planet),\n          children: planet.name\n        }, planet.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), selectedPlanet && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '30px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [selectedPlanet.name, \" Planet Information\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name: \", selectedPlanet.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Diameter: \", selectedPlanet.diameter]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Climate: \", selectedPlanet.climate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Terrain: \", selectedPlanet.terrain]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Rotation Period: \", selectedPlanet.rotation_period]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Orbital Period: \", selectedPlanet.orbital_period]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Gravity: \", selectedPlanet.gravity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Surface Water: \", selectedPlanet.surface_water]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Population: \", selectedPlanet.population]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(Planets, \"3sb7cfP2pelHJMcgufDv3rn3XPY=\");\n_c = Planets;\nexport default Planets;\nvar _c;\n$RefreshReg$(_c, \"Planets\");","map":{"version":3,"names":["React","useState","useEffect","MongoClient","Planets","planets","setPlanets","selectedPlanet","setSelectedPlanet","connectToDb","client","connect","useNewUrlParser","db","collection","find","toArray","handleClick","planet","fontFamily","textAlign","map","name","marginTop","diameter","climate","terrain","rotation_period","orbital_period","gravity","surface_water","population"],"sources":["C:/Users/wasadmin/Downloads/Project2/swapi/src/components/Planets.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { MongoClient } from 'mongodb';\r\n\r\nconst Planets = () => {\r\n  const [planets, setPlanets] = useState([]);\r\n  const [selectedPlanet, setSelectedPlanet] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const connectToDb = async () => {\r\n      const client = await MongoClient.connect(\r\n        'mongodb://localhost:27017',\r\n        { useNewUrlParser: true }\r\n      );\r\n      const db = client.db('starwars');\r\n      setPlanets(await db.collection('planets').find().toArray());\r\n    };\r\n    connectToDb();\r\n  }, []);\r\n\r\n  const handleClick = planet => {\r\n    setSelectedPlanet(planet);\r\n  };\r\n\r\n  return (\r\n    <div style={{ fontFamily: 'Georgia, sans-serif', textAlign: 'center' }}>\r\n      <div>\r\n        <h2>Star Wars Planets</h2>\r\n        <h3>Select a Planet</h3>\r\n        <ul>\r\n          {planets.map(planet => (\r\n            <li key={planet.name} onClick={() => handleClick(planet)}>\r\n              {planet.name}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      {selectedPlanet && (\r\n        <div style={{ marginTop: '30px' }}>\r\n          <h2>{selectedPlanet.name} Planet Information</h2>\r\n          <div style={{ textAlign: 'center' }}>\r\n            <p>Name: {selectedPlanet.name}</p>\r\n            <p>Diameter: {selectedPlanet.diameter}</p>\r\n            <p>Climate: {selectedPlanet.climate}</p>\r\n            <p>Terrain: {selectedPlanet.terrain}</p>\r\n            <p>Rotation Period: {selectedPlanet.rotation_period}</p>\r\n            <p>Orbital Period: {selectedPlanet.orbital_period}</p>\r\n            <p>Gravity: {selectedPlanet.gravity}</p>\r\n            <p>Surface Water: {selectedPlanet.surface_water}</p>\r\n            <p>Population: {selectedPlanet.population}</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Planets;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}